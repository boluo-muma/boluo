import{e as n}from"./app.2043d080.js";import{_ as s}from"./plugin-vue_export-helper.21dcd24c.js";const a={},p=n(`<h1 id="\u6811\u904D\u5386\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u6811\u904D\u5386\u65B9\u6CD5" aria-hidden="true">#</a> \u6811\u904D\u5386\u65B9\u6CD5</h1><p>\u5E7F\u5EA6\u4F18\u5148\u7684\u601D\u8DEF\u662F\uFF0C\u7EF4\u62A4\u4E00\u4E2A\u961F\u5217\uFF0C\u961F\u5217\u7684\u521D\u59CB\u503C\u4E3A\u6811\u7ED3\u6784\u6839\u8282\u70B9\u7EC4\u6210\u7684\u5217\u8868\uFF0C\u91CD\u590D\u6267\u884C\u4EE5\u4E0B\u6B65\u9AA4\u76F4\u5230\u961F\u5217\u4E3A\u7A7A\uFF1A</p><p>\u53D6\u51FA\u961F\u5217\u4E2D\u7684\u7B2C\u4E00\u4E2A\u5143\u7D20\uFF0C\u8FDB\u884C\u8BBF\u95EE\u76F8\u5173\u64CD\u4F5C\uFF0C\u7136\u540E\u5C06\u5176\u540E\u4EE3\u5143\u7D20\uFF08\u5982\u679C\u6709\uFF09\u5168\u90E8\u8FFD\u52A0\u5230\u961F\u5217\u6700\u540E\u3002 \u4E0B\u9762\u662F\u4EE3\u7801\u5B9E\u73B0\uFF0C\u7C7B\u4F3C\u4E8E\u6570\u7EC4\u7684forEach\u904D\u5386\uFF0C\u6211\u4EEC\u5C06\u6570\u7EC4\u7684\u8BBF\u95EE\u64CD\u4F5C\u4EA4\u7ED9\u8C03\u7528\u8005\u81EA\u5B9A\u4E49\uFF0C\u5373\u4E00\u4E2A\u56DE\u8C03\u51FD\u6570\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u5E7F\u5EA6\u4F18\u5148</span>
<span class="token keyword">function</span> <span class="token function">treeForeach</span> <span class="token punctuation">(</span><span class="token parameter">tree<span class="token punctuation">,</span> func</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> node<span class="token punctuation">,</span> list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>tree<span class="token punctuation">]</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span>node <span class="token operator">=</span> list<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">func</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span>
    node<span class="token punctuation">.</span>children <span class="token operator">&amp;&amp;</span> list<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token operator">...</span>node<span class="token punctuation">.</span>children<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u6DF1\u5EA6\u4F18\u5148\u904D\u5386\u7684\u9012\u5F52\u5B9E\u73B0-\u5148\u5E8F\u904D\u5386</span>
<span class="token keyword">function</span> <span class="token function">treeForeach</span> <span class="token punctuation">(</span><span class="token parameter">tree<span class="token punctuation">,</span> func</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  tree<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">data</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">func</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
    data<span class="token punctuation">.</span>children <span class="token operator">&amp;&amp;</span> <span class="token function">treeForeach</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>children<span class="token punctuation">,</span> func<span class="token punctuation">)</span> <span class="token comment">// \u904D\u5386\u5B50\u6811</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u540E\u5E8F\u904D\u5386</span>
<span class="token keyword">function</span> <span class="token function">treeForeach</span> <span class="token punctuation">(</span><span class="token parameter">tree<span class="token punctuation">,</span> func</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  tree<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">data</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    data<span class="token punctuation">.</span>children <span class="token operator">&amp;&amp;</span> <span class="token function">treeForeach</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>children<span class="token punctuation">,</span> func<span class="token punctuation">)</span> <span class="token comment">// \u904D\u5386\u5B50\u6811</span>
    <span class="token function">func</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u6DF1\u5EA6\u4F18\u5148\u5FAA\u73AF\u5B9E\u73B0</span>
<span class="token comment">// \u5148\u5E8F\u904D\u5386\u4E0E\u5E7F\u5EA6\u4F18\u5148\u5FAA\u73AF\u5B9E\u73B0\u7C7B\u4F3C\uFF0C\u8981\u7EF4\u62A4\u4E00\u4E2A\u961F\u5217\uFF0C\u4E0D\u540C\u7684\u662F\u5B50\u8282\u70B9\u4E0D\u8FFD\u52A0\u5230\u961F\u5217\u6700\u540E\uFF0C\u800C\u662F\u52A0\u5230\u961F\u5217\u6700\u524D\u9762\uFF1A</span>
<span class="token keyword">function</span> <span class="token function">treeForeach</span> <span class="token punctuation">(</span><span class="token parameter">tree<span class="token punctuation">,</span> func</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> node<span class="token punctuation">,</span> list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>tree<span class="token punctuation">]</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span>node <span class="token operator">=</span> list<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">func</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span>
    node<span class="token punctuation">.</span>children <span class="token operator">&amp;&amp;</span> list<span class="token punctuation">.</span><span class="token function">unshift</span><span class="token punctuation">(</span><span class="token operator">...</span>node<span class="token punctuation">.</span>children<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token doc-comment comment">/**
 * \u540E\u5E8F\u904D\u5386\u5C31\u7565\u5FAE\u590D\u6742\u4E00\u70B9\uFF0C\u6211\u4EEC\u9700\u8981\u4E0D\u65AD\u5C06\u5B50\u6811\u6269\u5C55\u5230\u6839\u8282\u70B9\u524D\u9762\u53BB\uFF0C\uFF08\u8270\u96BE\u5730\uFF09\u6267\u884C\u5217\u8868\u904D\u5386\uFF0C\u904D\u5386\u5230\u67D0\u4E2A\u8282\u70B9\u5982\u679C\u5B83\u6CA1\u6709\u5B50\u8282\u70B9\u6216\u8005\u5B83\u7684\u5B50\u8282\u70B9\u5DF2\u7ECF\u6269\u5C55\u5230\u5B83\u524D\u9762\u4E86\uFF0C\u5219\u6267\u884C\u8BBF\u95EE\u64CD\u4F5C\uFF0C\u5426\u5219\u6269\u5C55\u5B50\u8282\u70B9\u5230\u5F53\u524D\u8282\u70B9\u524D\u9762\uFF1A
 * 
**/</span>
<span class="token keyword">function</span> <span class="token function">treeForeach</span> <span class="token punctuation">(</span><span class="token parameter">tree<span class="token punctuation">,</span> func</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> node<span class="token punctuation">,</span> list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>tree<span class="token punctuation">]</span><span class="token punctuation">,</span> i <span class="token operator">=</span>  <span class="token number">0</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span>node <span class="token operator">=</span> list<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> childCount <span class="token operator">=</span> node<span class="token punctuation">.</span>children <span class="token operator">?</span> node<span class="token punctuation">.</span>children<span class="token punctuation">.</span>length <span class="token operator">:</span> <span class="token number">0</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>childCount <span class="token operator">||</span> node<span class="token punctuation">.</span>children<span class="token punctuation">[</span>childCount <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">===</span> list<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">func</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span>
      i<span class="token operator">++</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      list<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">...</span>node<span class="token punctuation">.</span>children<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br></div></div><h3 id="\u5217\u8868\u8F6C\u4E3A\u6811" tabindex="-1"><a class="header-anchor" href="#\u5217\u8868\u8F6C\u4E3A\u6811" aria-hidden="true">#</a> \u5217\u8868\u8F6C\u4E3A\u6811</h3><p>\u5217\u8868\u7ED3\u6784\u8F6C\u4E3A\u6811\u7ED3\u6784\uFF0C\u5C31\u662F\u628A\u6240\u6709\u975E\u6839\u8282\u70B9\u653E\u5230\u5BF9\u5E94\u7236\u8282\u70B9\u7684chilren\u6570\u7EC4\u4E2D\uFF0C\u7136\u540E\u628A\u6839\u8282\u70B9\u63D0\u53D6\u51FA\u6765\uFF1A \u8FD9\u91CC\u9996\u5148\u901A\u8FC7info\u5EFA\u7ACB\u4E86id=&gt;node\u7684\u6620\u5C04\uFF0C\u56E0\u4E3A\u5BF9\u8C61\u53D6\u503C\u7684\u65F6\u95F4\u590D\u6742\u5EA6\u662FO(1)\uFF0C\u8FD9\u6837\u5728\u63A5\u4E0B\u6765\u7684\u627E\u5BFB\u7236\u5143\u7D20\u5C31\u4E0D\u9700\u8981\u518D\u53BB\u904D\u5386\u4E00\u6B21list\u4E86\uFF0C\u56E0\u4E3A\u904D\u5386\u5BFB\u627E\u7236\u5143\u7D20\u65F6\u95F4\u590D\u6742\u5EA6\u662FO(n)\uFF0C\u5E76\u4E14\u662F\u5728\u5FAA\u73AF\u4E2D\u904D\u5386\uFF0C\u5219\u603B\u4F53\u65F6\u95F4\u590D\u6742\u5EA6\u4F1A\u53D8\u6210O(n^2)\uFF0C\u800C\u4E0A\u8FF0\u5B9E\u73B0\u7684\u603B\u4F53\u590D\u6742\u5EA6\u662FO(n)\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">listToTree</span> <span class="token punctuation">(</span><span class="token parameter">list</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> info <span class="token operator">=</span> list<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">map<span class="token punctuation">,</span> node</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>map<span class="token punctuation">[</span>node<span class="token punctuation">.</span>id<span class="token punctuation">]</span> <span class="token operator">=</span> node<span class="token punctuation">,</span> node<span class="token punctuation">.</span>children <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> map<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> list<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">node</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    info<span class="token punctuation">[</span>node<span class="token punctuation">.</span>parentId<span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> info<span class="token punctuation">[</span>node<span class="token punctuation">.</span>parentId<span class="token punctuation">]</span><span class="token punctuation">.</span>children<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token operator">!</span>node<span class="token punctuation">.</span>parentId
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="\u6811\u7ED3\u6784\u8F6C\u5217\u8868\u7ED3\u6784" tabindex="-1"><a class="header-anchor" href="#\u6811\u7ED3\u6784\u8F6C\u5217\u8868\u7ED3\u6784" aria-hidden="true">#</a> \u6811\u7ED3\u6784\u8F6C\u5217\u8868\u7ED3\u6784</h3><p>\u6709\u4E86\u904D\u5386\u6811\u7ED3\u6784\u7684\u7ECF\u9A8C\uFF0C\u6811\u7ED3\u6784\u8F6C\u4E3A\u5217\u8868\u7ED3\u6784\u5C31\u5F88\u7B80\u5355\u4E86\u3002\u4E0D\u8FC7\u6709\u65F6\u5019\uFF0C\u6211\u4EEC\u5E0C\u671B\u8F6C\u51FA\u6765\u7684\u5217\u8868\u6309\u7167\u76EE\u5F55\u5C55\u793A\u4E00\u6837\u7684\u987A\u5E8F\u653E\u5230\u4E00\u4E2A\u5217\u8868\u91CC\u7684\uFF0C\u5E76\u4E14\u5305\u542B\u5C42\u7EA7\u4FE1\u606F\u3002\u4F7F\u7528\u5148\u5E8F\u904D\u5386\u5C06\u6811\u7ED3\u6784\u8F6C\u4E3A\u5217\u8868\u7ED3\u6784\u662F\u5408\u9002\u7684\uFF0C\u76F4\u63A5\u4E0A\u4EE3\u7801:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//\u9012\u5F52\u5B9E\u73B0</span>
<span class="token keyword">function</span> <span class="token function">treeToList</span> <span class="token punctuation">(</span><span class="token parameter">tree<span class="token punctuation">,</span> result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> level <span class="token operator">=</span> <span class="token number">0</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  tree<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">node</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    result<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span>
    node<span class="token punctuation">.</span>level <span class="token operator">=</span> level <span class="token operator">+</span> <span class="token number">1</span>
    node<span class="token punctuation">.</span>children <span class="token operator">&amp;&amp;</span> <span class="token function">treeToList</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>children<span class="token punctuation">,</span> result<span class="token punctuation">,</span> level <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> result
<span class="token punctuation">}</span>

<span class="token comment">// \u5FAA\u73AF\u5B9E\u73B0</span>
<span class="token keyword">function</span> <span class="token function">treeToList</span> <span class="token punctuation">(</span><span class="token parameter">tree</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> node<span class="token punctuation">,</span> result <span class="token operator">=</span> tree<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">node</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>node<span class="token punctuation">.</span>level <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> node<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> result<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>result<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>children<span class="token punctuation">)</span> <span class="token keyword">continue</span>
    <span class="token keyword">let</span> list <span class="token operator">=</span> result<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>children<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">node</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>node<span class="token punctuation">.</span>level <span class="token operator">=</span> result<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>level <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> node<span class="token punctuation">)</span><span class="token punctuation">)</span>
    result<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">...</span>list<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> result
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><h3 id="\u6811\u7ED3\u6784\u7B5B\u9009" tabindex="-1"><a class="header-anchor" href="#\u6811\u7ED3\u6784\u7B5B\u9009" aria-hidden="true">#</a> \u6811\u7ED3\u6784\u7B5B\u9009</h3><p>\u6811\u7ED3\u6784\u8FC7\u6EE4\u5373\u4FDD\u7559\u67D0\u4E9B\u7B26\u5408\u6761\u4EF6\u7684\u8282\u70B9\uFF0C\u526A\u88C1\u6389\u5176\u5B83\u8282\u70B9\u3002\u4E00\u4E2A\u8282\u70B9\u662F\u5426\u4FDD\u7559\u5728\u8FC7\u6EE4\u540E\u7684\u6811\u7ED3\u6784\u4E2D\uFF0C\u53D6\u51B3\u4E8E\u5B83\u4EE5\u53CA\u540E\u4EE3\u8282\u70B9\u4E2D\u662F\u5426\u6709\u7B26\u5408\u6761\u4EF6\u7684\u8282\u70B9\u3002\u53EF\u4EE5\u4F20\u5165\u4E00\u4E2A\u51FD\u6570\u63CF\u8FF0\u7B26\u5408\u6761\u4EF6\u7684\u8282\u70B9:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">treeFilter</span> <span class="token punctuation">(</span><span class="token parameter">tree<span class="token punctuation">,</span> func</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u4F7F\u7528map\u590D\u5236\u4E00\u4E0B\u8282\u70B9\uFF0C\u907F\u514D\u4FEE\u6539\u5230\u539F\u6811</span>
  <span class="token keyword">return</span> tree<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">node</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token operator">...</span>node <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">node</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    node<span class="token punctuation">.</span>children <span class="token operator">=</span> node<span class="token punctuation">.</span>children <span class="token operator">&amp;&amp;</span> <span class="token function">treeFilter</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>children<span class="token punctuation">,</span> func<span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token function">func</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">(</span>node<span class="token punctuation">.</span>children <span class="token operator">&amp;&amp;</span> node<span class="token punctuation">.</span>children<span class="token punctuation">.</span>length<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="\u6811\u7ED3\u6784\u67E5\u627E" tabindex="-1"><a class="header-anchor" href="#\u6811\u7ED3\u6784\u67E5\u627E" aria-hidden="true">#</a> \u6811\u7ED3\u6784\u67E5\u627E</h3><ol><li>\u67E5\u627E\u8282\u70B9 \u67E5\u627E\u8282\u70B9\u5176\u5B9E\u5C31\u662F\u4E00\u4E2A\u904D\u5386\u7684\u8FC7\u7A0B\uFF0C\u904D\u5386\u5230\u6EE1\u8DB3\u6761\u4EF6\u7684\u8282\u70B9\u5219\u8FD4\u56DE\uFF0C\u904D\u5386\u5B8C\u6210\u672A\u627E\u5230\u5219\u8FD4\u56DEnull\u3002\u7C7B\u4F3C\u6570\u7EC4\u7684find\u65B9\u6CD5\uFF0C\u4F20\u5165\u4E00\u4E2A\u51FD\u6570\u7528\u4E8E\u5224\u65AD\u8282\u70B9\u662F\u5426\u7B26\u5408\u6761\u4EF6\uFF0C\u4EE3\u7801\u5982\u4E0B\uFF1A</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">treeFind</span> <span class="token punctuation">(</span><span class="token parameter">tree<span class="token punctuation">,</span> func</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> data <span class="token keyword">of</span> tree<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">func</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span> data
    <span class="token keyword">if</span> <span class="token punctuation">(</span>data<span class="token punctuation">.</span>children<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token function">treeFind</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>children<span class="token punctuation">,</span> func<span class="token punctuation">)</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>res<span class="token punctuation">)</span> <span class="token keyword">return</span> res
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token keyword">null</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>2.\u67E5\u627E\u8282\u70B9\u8DEF\u5F84 \u7565\u5FAE\u590D\u6742\u4E00\u70B9\uFF0C\u56E0\u4E3A\u4E0D\u77E5\u9053\u7B26\u5408\u6761\u4EF6\u7684\u8282\u70B9\u5728\u54EA\u4E2A\u5B50\u6811\uFF0C\u8981\u7528\u5230\u56DE\u6EAF\u6CD5\u7684\u601D\u60F3\u3002\u67E5\u627E\u8DEF\u5F84\u8981\u4F7F\u7528\u5148\u5E8F\u904D\u5386\uFF0C\u7EF4\u62A4\u4E00\u4E2A\u961F\u5217\u5B58\u50A8\u8DEF\u5F84\u4E0A\u6BCF\u4E2A\u8282\u70B9\u7684id\uFF0C\u5047\u8BBE\u8282\u70B9\u5C31\u5728\u5F53\u524D\u5206\u652F\uFF0C\u5982\u679C\u5F53\u524D\u5206\u652F\u67E5\u4E0D\u5230\uFF0C\u5219\u56DE\u6EAF\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">treeFindPath</span> <span class="token punctuation">(</span><span class="token parameter">tree<span class="token punctuation">,</span> func<span class="token punctuation">,</span> path <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>tree<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> data <span class="token keyword">of</span> tree<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    path<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>id<span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">func</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span> path
    <span class="token keyword">if</span> <span class="token punctuation">(</span>data<span class="token punctuation">.</span>children<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> findChildren <span class="token operator">=</span> <span class="token function">treeFindPath</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>children<span class="token punctuation">,</span> func<span class="token punctuation">,</span> path<span class="token punctuation">)</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>findChildren<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token keyword">return</span> findChildren
    <span class="token punctuation">}</span>
    path<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>3.\u67E5\u627E\u591A\u6761\u8282\u70B9\u8DEF\u5F84 \u601D\u8DEF\u4E0E\u67E5\u627E\u8282\u70B9\u8DEF\u5F84\u76F8\u4F3C\uFF0C\u4E0D\u8FC7\u4EE3\u7801\u5374\u66F4\u52A0\u7B80\u5355\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">treeFindPath</span> <span class="token punctuation">(</span><span class="token parameter">tree<span class="token punctuation">,</span> func<span class="token punctuation">,</span> path <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> data <span class="token keyword">of</span> tree<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    path<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>id<span class="token punctuation">)</span>
    <span class="token function">func</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> result<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">...</span>path<span class="token punctuation">]</span><span class="token punctuation">)</span>
    data<span class="token punctuation">.</span>children <span class="token operator">&amp;&amp;</span> <span class="token function">treeFindPath</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>children<span class="token punctuation">,</span> func<span class="token punctuation">,</span> path<span class="token punctuation">,</span> result<span class="token punctuation">)</span>
    path<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> result
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div>`,20);function t(e,o){return p}var l=s(a,[["render",t]]);export{l as default};
